  [+] Initializing done!
    => pcap : ./pcapFile/nginx_1.14.2_chromium_111.0.5563.146.pcapng, dst_ip : localhost

[STEP 2] Parsing http2 messages from pcapfile ./pcapFile/nginx_1.14.2_chromium_111.0.5563.146.pcapng ...
  [+] Parsing done! (Total 7 messages.)
  [DBG] messages (shortened)
    [ ] h2msg 1: SE-WI 
    [ ] h2msg 2: HE 
    [ ] h2msg 3: SE-WI-SE-HE 
    [ ] h2msg 4: DA 
    [ ] h2msg 5: SE 
    [ ] h2msg 6: HE 
    [ ] h2msg 7: HE-DA 

[STEP 3] Modeling started at Mon Apr  3 14:22:47 2023
  [+] --- Starting level 1 ---
  [+] State expansion start in level 1. (Mon Apr  3 14:22:47 2023)
  [EXPANSION-LEAF] Expanding leaf state init (1/1 leaves)
    [EXPANSION-STATE-'init'] move Frame: , send Frame: SE-WI (1/7 msgs)
    => () - SE-WI / SE-WI-SE-GO 
    => (10) sec
    [+] Candidate state 1 added (init -> 1)
    [EXPANSION-STATE-'init'] move Frame: , send Frame: HE (2/7 msgs)
    => () - HE / SE-WI-SE-HE-DA-GO 
    => (10) sec
    [+] Candidate state 2 added (init -> 2)
    [EXPANSION-STATE-'init'] move Frame: , send Frame: SE-WI-SE-HE (3/7 msgs)
    => () - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    [+] Candidate state 3 added (init -> 3)
    [EXPANSION-STATE-'init'] move Frame: , send Frame: DA (4/7 msgs)
    => () - DA / SE-WI-SE-GO 
    => (10) sec
    [+] Candidate state 4 added (init -> 4)
    [EXPANSION-STATE-'init'] move Frame: , send Frame: SE (5/7 msgs)
    => () - SE / SE-WI-SE-GO 
    => (10) sec
    [+] Candidate state 5 added (init -> 5)
    [EXPANSION-STATE-'init'] move Frame: , send Frame: HE (6/7 msgs)
    => () - HE / SE-WI-SE-GO 
    => (0) sec
    [+] Candidate state 6 added (init -> 6)
    [EXPANSION-STATE-'init'] move Frame: , send Frame: HE-DA (7/7 msgs)
    => () - HE-DA / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    [+] Candidate state 7 added (init -> 7)
  [+] State expansion end in level 1. (Mon Apr  3 14:23:48 2023)
state list length : 1
['init']
state list length : 7
['1', '2', '3', '4', '5', '6', '7']
  [+] State minimization start in level 1. (Mon Apr  3 14:23:48 2023)
  [INFO] Test 7 candidate states in level 1
  [MINIMIZATION-STATE 1] Retrieving its SR dict
    => (SE-WI) - SE-WI / SE-WI-SE-GO 
    => (10) sec
    => (SE-WI) - HE / SE-WI-SE-HE-DA-GO 
    => (10) sec
    => (SE-WI) - SE-WI-SE-HE / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI) - DA / SE-WI-SE-GO 
    => (10) sec
    => (SE-WI) - SE / SE-WI-SE-GO 
    => (10) sec
    => (SE-WI) - HE / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI) - HE-DA / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
  [MINIMIZATION-STATE 1] Testing with its parent state init ... 
  [MINIMIZATION-STATE 1] -> Different from parent init. Now check with sibling nodes ...
  [MINIMIZATION-STATE 1] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 1] -> **** Unique state 1 found ****
  [MINIMIZATION-STATE 2] Retrieving its SR dict
    => (HE) - SE-WI / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE) - HE / SE-WI-SE-HE-DA-GO 
    => (0) sec
    => (HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE) - DA / SE-WI-SE-HE-DA-GO 
    => (10) sec
    => (HE) - SE / SE-WI-SE-HE-DA-GO 
    => (10) sec
    => (HE) - HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (10) sec
    => (HE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (10) sec
  [MINIMIZATION-STATE 2] Testing with its parent state init ... 
  [MINIMIZATION-STATE 2] -> Different from parent init. Now check with sibling nodes ...
  [MINIMIZATION-STATE 2] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 2] -> **** Unique state 2 found ****
  [MINIMIZATION-STATE 3] Retrieving its SR dict
    => (SE-WI-SE-HE) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE) - DA / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    => (SE-WI-SE-HE) - SE / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    => (SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE) - HE-DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (10) sec
  [MINIMIZATION-STATE 3] Testing with its parent state init ... 
  [MINIMIZATION-STATE 3] -> Different from parent init. Now check with sibling nodes ...
  [MINIMIZATION-STATE 3] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 3] -> **** Unique state 3 found ****
  [MINIMIZATION-STATE 4] Retrieving its SR dict
    => (DA) - SE-WI / SE-WI-SE-GO 
    => (10) sec
    => (DA) - HE / SE-WI-SE-HE-DA-GO 
    => (10) sec
    => (DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    => (DA) - DA / SE-WI-SE-GO 
    => (10) sec
    => (DA) - SE / SE-WI-SE-GO 
    => (10) sec
    => (DA) - HE / SE-WI-SE-GO 
    => (0) sec
    => (DA) - HE-DA / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
  [MINIMIZATION-STATE 4] Testing with its parent state init ... 
  [MINIMIZATION-STATE 4] Same as parent state init. Merge with its parent
  [MINIMIZATION-STATE 5] Retrieving its SR dict
    => (SE) - SE-WI / SE-WI-SE-GO 
    => (10) sec
    => (SE) - HE / SE-WI-SE-HE-DA-GO 
    => (10) sec
    => (SE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    => (SE) - DA / SE-WI-SE-GO 
    => (10) sec
    => (SE) - SE / SE-WI-SE-GO 
    => (10) sec
    => (SE) - HE / SE-WI-SE-GO 
    => (0) sec
    => (SE) - HE-DA / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
  [MINIMIZATION-STATE 5] Testing with its parent state init ... 
  [MINIMIZATION-STATE 5] Same as parent state init. Merge with its parent
  [MINIMIZATION-STATE 6] Retrieving its SR dict
    => (HE) - SE-WI / SE-WI-SE-GO 
    => (0) sec
    => (HE) - HE / SE-WI-SE-GO 
    => (0) sec
    => (HE) - SE-WI-SE-HE / SE-WI-SE-GO 
    => (0) sec
    => (HE) - DA / SE-WI-SE-GO 
    => (0) sec
    => (HE) - SE / SE-WI-SE-GO 
    => (0) sec
    => (HE) - HE / SE-WI-SE-GO 
    => (0) sec
    => (HE) - HE-DA / SE-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 6] Testing with its parent state init ... 
  [MINIMIZATION-STATE 6] -> Different from parent init. Now check with sibling nodes ...
  [MINIMIZATION-STATE 6] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 6] -> **** Unique state 6 found ****
  [MINIMIZATION-STATE 6] -> finishing state
  [MINIMIZATION-STATE 7] Retrieving its SR dict
    => (HE-DA) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-DA) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA) - DA / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    => (HE-DA) - SE / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    => (HE-DA) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA) - HE-DA / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 7] Testing with its parent state init ... 
  [MINIMIZATION-STATE 7] -> Different from parent init. Now check with sibling nodes ...
  [MINIMIZATION-STATE 7] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 7] -> **** Unique state 7 found ****
  [+] State minimization end in level 1. (Mon Apr  3 14:28:29 2023)
  [+] --- Finished level 2 | Time elapsed 341.768985748291 ---
  [+] --- Starting level 2 ---
  [+] State expansion start in level 2. (Mon Apr  3 14:28:29 2023)
  [EXPANSION-LEAF] Expanding leaf state 1 (1/4 leaves)
    [EXPANSION-STATE-'1'] move Frame: SE-WI, send Frame: SE-WI (1/7 msgs)
    => (SE-WI) - SE-WI / SE-WI-SE-GO 
    => (10) sec
    [+] Candidate state 8 added (1 -> 8)
    [EXPANSION-STATE-'1'] move Frame: SE-WI, send Frame: HE (2/7 msgs)
    => (SE-WI) - HE / SE-WI-SE-HE-DA-GO 
    => (10) sec
    [+] Candidate state 9 added (1 -> 9)
    [EXPANSION-STATE-'1'] move Frame: SE-WI, send Frame: SE-WI-SE-HE (3/7 msgs)
    => (SE-WI) - SE-WI-SE-HE / SE-WI-SE-GO 
    => (0) sec
    [+] Candidate state 10 added (1 -> 10)
    [EXPANSION-STATE-'1'] move Frame: SE-WI, send Frame: DA (4/7 msgs)
    => (SE-WI) - DA / SE-WI-SE-GO 
    => (10) sec
    [+] Candidate state 11 added (1 -> 11)
    [EXPANSION-STATE-'1'] move Frame: SE-WI, send Frame: SE (5/7 msgs)
    => (SE-WI) - SE / SE-WI-SE-GO 
    => (10) sec
    [+] Candidate state 12 added (1 -> 12)
    [EXPANSION-STATE-'1'] move Frame: SE-WI, send Frame: HE (6/7 msgs)
    => (SE-WI) - HE / SE-WI-SE-GO 
    => (0) sec
    [+] Candidate state 13 added (1 -> 13)
    [EXPANSION-STATE-'1'] move Frame: SE-WI, send Frame: HE-DA (7/7 msgs)
    => (SE-WI) - HE-DA / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    [+] Candidate state 14 added (1 -> 14)
  [EXPANSION-LEAF] Expanding leaf state 2 (2/4 leaves)
    [EXPANSION-STATE-'2'] move Frame: HE, send Frame: SE-WI (1/7 msgs)
    => (HE) - SE-WI / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    [+] Candidate state 15 added (2 -> 15)
    [EXPANSION-STATE-'2'] move Frame: HE, send Frame: HE (2/7 msgs)
    => (HE) - HE / SE-WI-SE-HE-DA-GO 
    => (0) sec
    [+] Candidate state 16 added (2 -> 16)
    [EXPANSION-STATE-'2'] move Frame: HE, send Frame: SE-WI-SE-HE (3/7 msgs)
    => (HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    [+] Candidate state 17 added (2 -> 17)
    [EXPANSION-STATE-'2'] move Frame: HE, send Frame: DA (4/7 msgs)
    => (HE) - DA / SE-WI-SE-HE-DA-GO 
    => (10) sec
    [+] Candidate state 18 added (2 -> 18)
    [EXPANSION-STATE-'2'] move Frame: HE, send Frame: SE (5/7 msgs)
    => (HE) - SE / SE-WI-SE-HE-DA-GO 
    => (10) sec
    [+] Candidate state 19 added (2 -> 19)
    [EXPANSION-STATE-'2'] move Frame: HE, send Frame: HE (6/7 msgs)
    => (HE) - HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (10) sec
    [+] Candidate state 20 added (2 -> 20)
    [EXPANSION-STATE-'2'] move Frame: HE, send Frame: HE-DA (7/7 msgs)
    => (HE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (10) sec
    [+] Candidate state 21 added (2 -> 21)
  [EXPANSION-LEAF] Expanding leaf state 3 (3/4 leaves)
    [EXPANSION-STATE-'3'] move Frame: SE-WI-SE-HE, send Frame: SE-WI (1/7 msgs)
    => (SE-WI-SE-HE) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    [+] Candidate state 22 added (3 -> 22)
    [EXPANSION-STATE-'3'] move Frame: SE-WI-SE-HE, send Frame: HE (2/7 msgs)
    => (SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    [+] Candidate state 23 added (3 -> 23)
    [EXPANSION-STATE-'3'] move Frame: SE-WI-SE-HE, send Frame: SE-WI-SE-HE (3/7 msgs)
    => (SE-WI-SE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    [+] Candidate state 24 added (3 -> 24)
    [EXPANSION-STATE-'3'] move Frame: SE-WI-SE-HE, send Frame: DA (4/7 msgs)
    => (SE-WI-SE-HE) - DA / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    [+] Candidate state 25 added (3 -> 25)
    [EXPANSION-STATE-'3'] move Frame: SE-WI-SE-HE, send Frame: SE (5/7 msgs)
    => (SE-WI-SE-HE) - SE / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    [+] Candidate state 26 added (3 -> 26)
    [EXPANSION-STATE-'3'] move Frame: SE-WI-SE-HE, send Frame: HE (6/7 msgs)
    => (SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    [+] Candidate state 27 added (3 -> 27)
    [EXPANSION-STATE-'3'] move Frame: SE-WI-SE-HE, send Frame: HE-DA (7/7 msgs)
    => (SE-WI-SE-HE) - HE-DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (10) sec
    [+] Candidate state 28 added (3 -> 28)
  [EXPANSION-LEAF] Expanding leaf state 7 (4/4 leaves)
    [EXPANSION-STATE-'7'] move Frame: HE-DA, send Frame: SE-WI (1/7 msgs)
    => (HE-DA) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    [+] Candidate state 29 added (7 -> 29)
    [EXPANSION-STATE-'7'] move Frame: HE-DA, send Frame: HE (2/7 msgs)
    => (HE-DA) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    [+] Candidate state 30 added (7 -> 30)
    [EXPANSION-STATE-'7'] move Frame: HE-DA, send Frame: SE-WI-SE-HE (3/7 msgs)
    => (HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    [+] Candidate state 31 added (7 -> 31)
    [EXPANSION-STATE-'7'] move Frame: HE-DA, send Frame: DA (4/7 msgs)
    => (HE-DA) - DA / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    [+] Candidate state 32 added (7 -> 32)
    [EXPANSION-STATE-'7'] move Frame: HE-DA, send Frame: SE (5/7 msgs)
    => (HE-DA) - SE / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    [+] Candidate state 33 added (7 -> 33)
    [EXPANSION-STATE-'7'] move Frame: HE-DA, send Frame: HE (6/7 msgs)
    => (HE-DA) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    [+] Candidate state 34 added (7 -> 34)
    [EXPANSION-STATE-'7'] move Frame: HE-DA, send Frame: HE-DA (7/7 msgs)
    => (HE-DA) - HE-DA / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    [+] Candidate state 35 added (7 -> 35)
  [+] State expansion end in level 2. (Mon Apr  3 14:31:10 2023)
state list length : 5
['init', '1', '2', '3', '7']
state list length : 28
['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35']
  [+] State minimization start in level 2. (Mon Apr  3 14:31:10 2023)
  [INFO] Test 28 candidate states in level 2
  [MINIMIZATION-STATE 8] Retrieving its SR dict
    => (SE-WI-SE-WI) - SE-WI / SE-WI-SE-GO 
    => (10) sec
    => (SE-WI-SE-WI) - HE / SE-WI-SE-HE-DA-GO 
    => (10) sec
    => (SE-WI-SE-WI) - SE-WI-SE-HE / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-WI) - DA / SE-WI-SE-GO 
    => (10) sec
    => (SE-WI-SE-WI) - SE / SE-WI-SE-GO 
    => (10) sec
    => (SE-WI-SE-WI) - HE / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-WI) - HE-DA / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
  [MINIMIZATION-STATE 8] Testing with its parent state 1 ... 
  [MINIMIZATION-STATE 8] Same as parent state 1. Merge with its parent
  [MINIMIZATION-STATE 9] Retrieving its SR dict
    => (SE-WI-HE) - SE-WI / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    => (SE-WI-HE) - HE / SE-WI-SE-HE-DA-GO 
    => (0) sec
    => (SE-WI-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (SE-WI-HE) - DA / SE-WI-SE-HE-DA-GO 
    => (10) sec
    => (SE-WI-HE) - SE / SE-WI-SE-HE-DA-GO 
    => (10) sec
    => (SE-WI-HE) - HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (10) sec
    => (SE-WI-HE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (10) sec
  [MINIMIZATION-STATE 9] Testing with its parent state 1 ... 
  [MINIMIZATION-STATE 9] -> Different from parent 1. Now check with sibling nodes ...
  [MINIMIZATION-STATE 9] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 9] Same as relative state 2. Merge with its relative
  [MINIMIZATION-STATE 10] Retrieving its SR dict
    => (SE-WI-SE-WI-SE-HE) - SE-WI / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-WI-SE-HE) - HE / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-WI-SE-HE) - SE-WI-SE-HE / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-WI-SE-HE) - DA / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-WI-SE-HE) - SE / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-WI-SE-HE) - HE / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-WI-SE-HE) - HE-DA / SE-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 10] Testing with its parent state 1 ... 
  [MINIMIZATION-STATE 10] -> Different from parent 1. Now check with sibling nodes ...
  [MINIMIZATION-STATE 10] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 10] -> **** Unique state 10 found ****
  [MINIMIZATION-STATE 10] -> finishing state
  [MINIMIZATION-STATE 11] Retrieving its SR dict
    => (SE-WI-DA) - SE-WI / SE-WI-SE-GO 
    => (10) sec
    => (SE-WI-DA) - HE / SE-WI-SE-HE-DA-GO 
    => (10) sec
    => (SE-WI-DA) - SE-WI-SE-HE / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI-DA) - DA / SE-WI-SE-GO 
    => (10) sec
    => (SE-WI-DA) - SE / SE-WI-SE-GO 
    => (10) sec
    => (SE-WI-DA) - HE / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI-DA) - HE-DA / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
  [MINIMIZATION-STATE 11] Testing with its parent state 1 ... 
  [MINIMIZATION-STATE 11] Same as parent state 1. Merge with its parent
  [MINIMIZATION-STATE 12] Retrieving its SR dict
    => (SE-WI-SE) - SE-WI / SE-WI-SE-GO 
    => (10) sec
    => (SE-WI-SE) - HE / SE-WI-SE-HE-DA-GO 
    => (10) sec
    => (SE-WI-SE) - SE-WI-SE-HE / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE) - DA / SE-WI-SE-GO 
    => (10) sec
    => (SE-WI-SE) - SE / SE-WI-SE-GO 
    => (10) sec
    => (SE-WI-SE) - HE / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE) - HE-DA / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
  [MINIMIZATION-STATE 12] Testing with its parent state 1 ... 
  [MINIMIZATION-STATE 12] Same as parent state 1. Merge with its parent
  [MINIMIZATION-STATE 13] Retrieving its SR dict
    => (SE-WI-HE) - SE-WI / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI-HE) - HE / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI-HE) - SE-WI-SE-HE / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI-HE) - DA / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI-HE) - SE / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI-HE) - HE / SE-WI-SE-GO 
    => (0) sec
    => (SE-WI-HE) - HE-DA / SE-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 13] Testing with its parent state 1 ... 
  [MINIMIZATION-STATE 13] -> Different from parent 1. Now check with sibling nodes ...
  [MINIMIZATION-STATE 13] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 13] -> **** Unique state 13 found ****
  [MINIMIZATION-STATE 13] -> finishing state
  [MINIMIZATION-STATE 14] Retrieving its SR dict
    => (SE-WI-HE-DA) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (SE-WI-HE-DA) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-HE-DA) - DA / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    => (SE-WI-HE-DA) - SE / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    => (SE-WI-HE-DA) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-HE-DA) - HE-DA / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 14] Testing with its parent state 1 ... 
  [MINIMIZATION-STATE 14] -> Different from parent 1. Now check with sibling nodes ...
  [MINIMIZATION-STATE 14] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 14] Same as relative state 7. Merge with its relative
  [MINIMIZATION-STATE 15] Retrieving its SR dict
    => (HE-SE-WI) - SE-WI / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI) - HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI) - DA / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI) - SE / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI) - HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (10) sec
    => (HE-SE-WI) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (10) sec
  [MINIMIZATION-STATE 15] Testing with its parent state 2 ... 
  [MINIMIZATION-STATE 15] -> Different from parent 2. Now check with sibling nodes ...
  [MINIMIZATION-STATE 15] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 15] -> **** Unique state 15 found ****
  [MINIMIZATION-STATE 16] Retrieving its SR dict
    => (HE-HE) - SE-WI / SE-WI-SE-HE-DA-GO 
    => (0) sec
    => (HE-HE) - HE / SE-WI-SE-HE-DA-GO 
    => (0) sec
    => (HE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-GO 
    => (0) sec
    => (HE-HE) - DA / SE-WI-SE-HE-DA-GO 
    => (0) sec
    => (HE-HE) - SE / SE-WI-SE-HE-DA-GO 
    => (0) sec
    => (HE-HE) - HE / SE-WI-SE-HE-DA-GO 
    => (0) sec
    => (HE-HE) - HE-DA / SE-WI-SE-HE-DA-GO 
    => (0) sec
  [MINIMIZATION-STATE 16] Testing with its parent state 2 ... 
  [MINIMIZATION-STATE 16] -> Different from parent 2. Now check with sibling nodes ...
  [MINIMIZATION-STATE 16] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 16] -> **** Unique state 16 found ****
  [MINIMIZATION-STATE 16] -> finishing state
  [MINIMIZATION-STATE 17] Retrieving its SR dict
    => (HE-SE-WI-SE-HE) - SE-WI / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-SE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-SE-HE) - DA / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-SE-HE) - SE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-SE-HE) - HE-DA / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 17] Testing with its parent state 2 ... 
  [MINIMIZATION-STATE 17] -> Different from parent 2. Now check with sibling nodes ...
  [MINIMIZATION-STATE 17] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 17] -> **** Unique state 17 found ****
  [MINIMIZATION-STATE 17] -> finishing state
  [MINIMIZATION-STATE 18] Retrieving its SR dict
    => (HE-DA) - SE-WI / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-DA) - HE / SE-WI-SE-HE-DA-GO 
    => (0) sec
    => (HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-DA) - DA / SE-WI-SE-HE-DA-GO 
    => (10) sec
    => (HE-DA) - SE / SE-WI-SE-HE-DA-GO 
    => (10) sec
    => (HE-DA) - HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (10) sec
    => (HE-DA) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (10) sec
  [MINIMIZATION-STATE 18] Testing with its parent state 2 ... 
  [MINIMIZATION-STATE 18] Same as parent state 2. Merge with its parent
  [MINIMIZATION-STATE 19] Retrieving its SR dict
    => (HE-SE) - SE-WI / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE) - HE / SE-WI-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE) - DA / SE-WI-SE-HE-DA-GO 
    => (10) sec
    => (HE-SE) - SE / SE-WI-SE-HE-DA-GO 
    => (10) sec
    => (HE-SE) - HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (10) sec
    => (HE-SE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (10) sec
  [MINIMIZATION-STATE 19] Testing with its parent state 2 ... 
  [MINIMIZATION-STATE 19] Same as parent state 2. Merge with its parent
  [MINIMIZATION-STATE 20] Retrieving its SR dict
    => (HE-HE) - SE-WI / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (10) sec
    => (HE-HE) - HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE) - DA / SE-WI-SE-HE-DA-HE-DA-GO 
    => (10) sec
    => (HE-HE) - SE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (10) sec
    => (HE-HE) - HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
  [MINIMIZATION-STATE 20] Testing with its parent state 2 ... 
  [MINIMIZATION-STATE 20] -> Different from parent 2. Now check with sibling nodes ...
  [MINIMIZATION-STATE 20] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 20] -> **** Unique state 20 found ****
  [MINIMIZATION-STATE 21] Retrieving its SR dict
    => (HE-HE-DA) - SE-WI / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-HE-DA) - HE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA) - DA / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (10) sec
    => (HE-HE-DA) - SE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (10) sec
    => (HE-HE-DA) - HE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 21] Testing with its parent state 2 ... 
  [MINIMIZATION-STATE 21] -> Different from parent 2. Now check with sibling nodes ...
  [MINIMIZATION-STATE 21] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 21] -> **** Unique state 21 found ****
  [MINIMIZATION-STATE 22] Retrieving its SR dict
    => (SE-WI-SE-HE-SE-WI) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-SE-WI) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-SE-WI) - DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-SE-WI) - SE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-SE-WI) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-SE-WI) - HE-DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 22] Testing with its parent state 3 ... 
  [MINIMIZATION-STATE 22] -> Different from parent 3. Now check with sibling nodes ...
  [MINIMIZATION-STATE 22] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 22] -> **** Unique state 22 found ****
  [MINIMIZATION-STATE 22] -> finishing state
  [MINIMIZATION-STATE 23] Retrieving its SR dict
    => (SE-WI-SE-HE-HE) - SE-WI / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE) - DA / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE) - SE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE) - HE-DA / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 23] Testing with its parent state 3 ... 
  [MINIMIZATION-STATE 23] -> Different from parent 3. Now check with sibling nodes ...
  [MINIMIZATION-STATE 23] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 23] -> **** Unique state 23 found ****
  [MINIMIZATION-STATE 23] -> finishing state
  [MINIMIZATION-STATE 24] Retrieving its SR dict
    => (SE-WI-SE-HE-SE-WI-SE-HE) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-SE-WI-SE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-SE-WI-SE-HE) - DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-SE-WI-SE-HE) - SE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-SE-WI-SE-HE) - HE-DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 24] Testing with its parent state 3 ... 
  [MINIMIZATION-STATE 24] -> Different from parent 3. Now check with sibling nodes ...
  [MINIMIZATION-STATE 24] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 24] -> **** Unique state 24 found ****
  [MINIMIZATION-STATE 24] -> finishing state
  [MINIMIZATION-STATE 25] Retrieving its SR dict
    => (SE-WI-SE-HE-DA) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-DA) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-DA) - DA / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    => (SE-WI-SE-HE-DA) - SE / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    => (SE-WI-SE-HE-DA) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-DA) - HE-DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (10) sec
  [MINIMIZATION-STATE 25] Testing with its parent state 3 ... 
  [MINIMIZATION-STATE 25] Same as parent state 3. Merge with its parent
  [MINIMIZATION-STATE 26] Retrieving its SR dict
    => (SE-WI-SE-HE-SE) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-SE) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-SE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-SE) - DA / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    => (SE-WI-SE-HE-SE) - SE / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    => (SE-WI-SE-HE-SE) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-SE) - HE-DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (10) sec
  [MINIMIZATION-STATE 26] Testing with its parent state 3 ... 
  [MINIMIZATION-STATE 26] Same as parent state 3. Merge with its parent
  [MINIMIZATION-STATE 27] Retrieving its SR dict
    => (SE-WI-SE-HE-HE) - SE-WI / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE) - DA / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE) - SE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE) - HE-DA / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 27] Testing with its parent state 3 ... 
  [MINIMIZATION-STATE 27] -> Different from parent 3. Now check with sibling nodes ...
  [MINIMIZATION-STATE 27] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 27] -> **** Unique state 27 found ****
  [MINIMIZATION-STATE 27] -> finishing state
  [MINIMIZATION-STATE 28] Retrieving its SR dict
    => (SE-WI-SE-HE-HE-DA) - SE-WI / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA) - HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA) - DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (10) sec
    => (SE-WI-SE-HE-HE-DA) - SE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (10) sec
    => (SE-WI-SE-HE-HE-DA) - HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA) - HE-DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 28] Testing with its parent state 3 ... 
  [MINIMIZATION-STATE 28] -> Different from parent 3. Now check with sibling nodes ...
  [MINIMIZATION-STATE 28] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 28] -> **** Unique state 28 found ****
  [MINIMIZATION-STATE 29] Retrieving its SR dict
    => (HE-DA-SE-WI) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-DA-SE-WI) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI) - DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-DA-SE-WI) - SE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-DA-SE-WI) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI) - HE-DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 29] Testing with its parent state 7 ... 
  [MINIMIZATION-STATE 29] -> Different from parent 7. Now check with sibling nodes ...
  [MINIMIZATION-STATE 29] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 29] -> **** Unique state 29 found ****
  [MINIMIZATION-STATE 30] Retrieving its SR dict
    => (HE-DA-HE) - SE-WI / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-HE) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-HE) - DA / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-HE) - SE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-HE) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-HE) - HE-DA / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 30] Testing with its parent state 7 ... 
  [MINIMIZATION-STATE 30] -> Different from parent 7. Now check with sibling nodes ...
  [MINIMIZATION-STATE 30] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 30] -> **** Unique state 30 found ****
  [MINIMIZATION-STATE 30] -> finishing state
  [MINIMIZATION-STATE 31] Retrieving its SR dict
    => (HE-DA-SE-WI-SE-HE) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-SE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-SE-HE) - DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-SE-HE) - SE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-SE-HE) - HE-DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 31] Testing with its parent state 7 ... 
  [MINIMIZATION-STATE 31] -> Different from parent 7. Now check with sibling nodes ...
  [MINIMIZATION-STATE 31] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 31] -> **** Unique state 31 found ****
  [MINIMIZATION-STATE 31] -> finishing state
  [MINIMIZATION-STATE 32] Retrieving its SR dict
    => (HE-DA-DA) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-DA-DA) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-DA) - DA / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    => (HE-DA-DA) - SE / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    => (HE-DA-DA) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-DA) - HE-DA / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 32] Testing with its parent state 7 ... 
  [MINIMIZATION-STATE 32] Same as parent state 7. Merge with its parent
  [MINIMIZATION-STATE 33] Retrieving its SR dict
    => (HE-DA-SE) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-DA-SE) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-SE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE) - DA / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    => (HE-DA-SE) - SE / SE-WI-SE-HE-DA-WI-GO 
    => (10) sec
    => (HE-DA-SE) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-SE) - HE-DA / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 33] Testing with its parent state 7 ... 
  [MINIMIZATION-STATE 33] Same as parent state 7. Merge with its parent
  [MINIMIZATION-STATE 34] Retrieving its SR dict
    => (HE-DA-HE) - SE-WI / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-HE) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-HE) - DA / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-HE) - SE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-HE) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-HE) - HE-DA / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 34] Testing with its parent state 7 ... 
  [MINIMIZATION-STATE 34] -> Different from parent 7. Now check with sibling nodes ...
  [MINIMIZATION-STATE 34] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 34] -> **** Unique state 34 found ****
  [MINIMIZATION-STATE 34] -> finishing state
  [MINIMIZATION-STATE 35] Retrieving its SR dict
    => (HE-DA-HE-DA) - SE-WI / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-HE-DA) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-HE-DA) - DA / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-HE-DA) - SE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-HE-DA) - HE / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-DA-HE-DA) - HE-DA / SE-WI-SE-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 35] Testing with its parent state 7 ... 
  [MINIMIZATION-STATE 35] -> Different from parent 7. Now check with sibling nodes ...
  [MINIMIZATION-STATE 35] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 35] -> **** Unique state 35 found ****
  [MINIMIZATION-STATE 35] -> finishing state
  [+] State minimization end in level 2. (Mon Apr  3 14:41:29 2023)
  [+] --- Finished level 3 | Time elapsed 1121.2419760227203 ---
  [+] --- Starting level 3 ---
  [+] State expansion start in level 3. (Mon Apr  3 14:41:29 2023)
  [EXPANSION-LEAF] Expanding leaf state 15 (1/5 leaves)
    [EXPANSION-STATE-'15'] move Frame: HE-SE-WI, send Frame: SE-WI (1/7 msgs)
    => (HE-SE-WI) - SE-WI / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    [+] Candidate state 36 added (15 -> 36)
    [EXPANSION-STATE-'15'] move Frame: HE-SE-WI, send Frame: HE (2/7 msgs)
    => (HE-SE-WI) - HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    [+] Candidate state 37 added (15 -> 37)
    [EXPANSION-STATE-'15'] move Frame: HE-SE-WI, send Frame: SE-WI-SE-HE (3/7 msgs)
    => (HE-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    [+] Candidate state 38 added (15 -> 38)
    [EXPANSION-STATE-'15'] move Frame: HE-SE-WI, send Frame: DA (4/7 msgs)
    => (HE-SE-WI) - DA / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    [+] Candidate state 39 added (15 -> 39)
    [EXPANSION-STATE-'15'] move Frame: HE-SE-WI, send Frame: SE (5/7 msgs)
    => (HE-SE-WI) - SE / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    [+] Candidate state 40 added (15 -> 40)
    [EXPANSION-STATE-'15'] move Frame: HE-SE-WI, send Frame: HE (6/7 msgs)
    => (HE-SE-WI) - HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (10) sec
    [+] Candidate state 41 added (15 -> 41)
    [EXPANSION-STATE-'15'] move Frame: HE-SE-WI, send Frame: HE-DA (7/7 msgs)
    => (HE-SE-WI) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (10) sec
    [+] Candidate state 42 added (15 -> 42)
  [EXPANSION-LEAF] Expanding leaf state 20 (2/5 leaves)
    [EXPANSION-STATE-'20'] move Frame: HE-HE, send Frame: SE-WI (1/7 msgs)
    => (HE-HE) - SE-WI / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (10) sec
    [+] Candidate state 43 added (20 -> 43)
    [EXPANSION-STATE-'20'] move Frame: HE-HE, send Frame: HE (2/7 msgs)
    => (HE-HE) - HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    [+] Candidate state 44 added (20 -> 44)
    [EXPANSION-STATE-'20'] move Frame: HE-HE, send Frame: SE-WI-SE-HE (3/7 msgs)
    => (HE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    [+] Candidate state 45 added (20 -> 45)
    [EXPANSION-STATE-'20'] move Frame: HE-HE, send Frame: DA (4/7 msgs)
    => (HE-HE) - DA / SE-WI-SE-HE-DA-HE-DA-GO 
    => (10) sec
    [+] Candidate state 46 added (20 -> 46)
    [EXPANSION-STATE-'20'] move Frame: HE-HE, send Frame: SE (5/7 msgs)
    => (HE-HE) - SE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (10) sec
    [+] Candidate state 47 added (20 -> 47)
    [EXPANSION-STATE-'20'] move Frame: HE-HE, send Frame: HE (6/7 msgs)
    => (HE-HE) - HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    [+] Candidate state 48 added (20 -> 48)
    [EXPANSION-STATE-'20'] move Frame: HE-HE, send Frame: HE-DA (7/7 msgs)
    => (HE-HE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    [+] Candidate state 49 added (20 -> 49)
  [EXPANSION-LEAF] Expanding leaf state 21 (3/5 leaves)
    [EXPANSION-STATE-'21'] move Frame: HE-HE-DA, send Frame: SE-WI (1/7 msgs)
    => (HE-HE-DA) - SE-WI / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (10) sec
    [+] Candidate state 50 added (21 -> 50)
    [EXPANSION-STATE-'21'] move Frame: HE-HE-DA, send Frame: HE (2/7 msgs)
    => (HE-HE-DA) - HE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    [+] Candidate state 51 added (21 -> 51)
    [EXPANSION-STATE-'21'] move Frame: HE-HE-DA, send Frame: SE-WI-SE-HE (3/7 msgs)
    => (HE-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    [+] Candidate state 52 added (21 -> 52)
    [EXPANSION-STATE-'21'] move Frame: HE-HE-DA, send Frame: DA (4/7 msgs)
    => (HE-HE-DA) - DA / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (10) sec
    [+] Candidate state 53 added (21 -> 53)
    [EXPANSION-STATE-'21'] move Frame: HE-HE-DA, send Frame: SE (5/7 msgs)
    => (HE-HE-DA) - SE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (10) sec
    [+] Candidate state 54 added (21 -> 54)
    [EXPANSION-STATE-'21'] move Frame: HE-HE-DA, send Frame: HE (6/7 msgs)
    => (HE-HE-DA) - HE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    [+] Candidate state 55 added (21 -> 55)
    [EXPANSION-STATE-'21'] move Frame: HE-HE-DA, send Frame: HE-DA (7/7 msgs)
    => (HE-HE-DA) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    [+] Candidate state 56 added (21 -> 56)
  [EXPANSION-LEAF] Expanding leaf state 28 (4/5 leaves)
    [EXPANSION-STATE-'28'] move Frame: SE-WI-SE-HE-HE-DA, send Frame: SE-WI (1/7 msgs)
    => (SE-WI-SE-HE-HE-DA) - SE-WI / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    [+] Candidate state 57 added (28 -> 57)
    [EXPANSION-STATE-'28'] move Frame: SE-WI-SE-HE-HE-DA, send Frame: HE (2/7 msgs)
    => (SE-WI-SE-HE-HE-DA) - HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    [+] Candidate state 58 added (28 -> 58)
    [EXPANSION-STATE-'28'] move Frame: SE-WI-SE-HE-HE-DA, send Frame: SE-WI-SE-HE (3/7 msgs)
    => (SE-WI-SE-HE-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    [+] Candidate state 59 added (28 -> 59)
    [EXPANSION-STATE-'28'] move Frame: SE-WI-SE-HE-HE-DA, send Frame: DA (4/7 msgs)
    => (SE-WI-SE-HE-HE-DA) - DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (10) sec
    [+] Candidate state 60 added (28 -> 60)
    [EXPANSION-STATE-'28'] move Frame: SE-WI-SE-HE-HE-DA, send Frame: SE (5/7 msgs)
    => (SE-WI-SE-HE-HE-DA) - SE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (10) sec
    [+] Candidate state 61 added (28 -> 61)
    [EXPANSION-STATE-'28'] move Frame: SE-WI-SE-HE-HE-DA, send Frame: HE (6/7 msgs)
    => (SE-WI-SE-HE-HE-DA) - HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    [+] Candidate state 62 added (28 -> 62)
    [EXPANSION-STATE-'28'] move Frame: SE-WI-SE-HE-HE-DA, send Frame: HE-DA (7/7 msgs)
    => (SE-WI-SE-HE-HE-DA) - HE-DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    [+] Candidate state 63 added (28 -> 63)
  [EXPANSION-LEAF] Expanding leaf state 29 (5/5 leaves)
    [EXPANSION-STATE-'29'] move Frame: HE-DA-SE-WI, send Frame: SE-WI (1/7 msgs)
    => (HE-DA-SE-WI) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    [+] Candidate state 64 added (29 -> 64)
    [EXPANSION-STATE-'29'] move Frame: HE-DA-SE-WI, send Frame: HE (2/7 msgs)
    => (HE-DA-SE-WI) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    [+] Candidate state 65 added (29 -> 65)
    [EXPANSION-STATE-'29'] move Frame: HE-DA-SE-WI, send Frame: SE-WI-SE-HE (3/7 msgs)
    => (HE-DA-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    [+] Candidate state 66 added (29 -> 66)
    [EXPANSION-STATE-'29'] move Frame: HE-DA-SE-WI, send Frame: DA (4/7 msgs)
    => (HE-DA-SE-WI) - DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    [+] Candidate state 67 added (29 -> 67)
    [EXPANSION-STATE-'29'] move Frame: HE-DA-SE-WI, send Frame: SE (5/7 msgs)
    => (HE-DA-SE-WI) - SE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    [+] Candidate state 68 added (29 -> 68)
    [EXPANSION-STATE-'29'] move Frame: HE-DA-SE-WI, send Frame: HE (6/7 msgs)
    => (HE-DA-SE-WI) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    [+] Candidate state 69 added (29 -> 69)
    [EXPANSION-STATE-'29'] move Frame: HE-DA-SE-WI, send Frame: HE-DA (7/7 msgs)
    => (HE-DA-SE-WI) - HE-DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    [+] Candidate state 70 added (29 -> 70)
  [+] State expansion end in level 3. (Mon Apr  3 14:44:10 2023)
state list length : 10
['init', '1', '2', '3', '7', '15', '20', '21', '28', '29']
state list length : 35
['36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70']
  [+] State minimization start in level 3. (Mon Apr  3 14:44:10 2023)
  [INFO] Test 35 candidate states in level 3
  [MINIMIZATION-STATE 36] Retrieving its SR dict
    => (HE-SE-WI-SE-WI) - SE-WI / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-SE-WI) - HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-SE-WI) - DA / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-SE-WI) - SE / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-SE-WI) - HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (10) sec
    => (HE-SE-WI-SE-WI) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (10) sec
  [MINIMIZATION-STATE 36] Testing with its parent state 15 ... 
  [MINIMIZATION-STATE 36] Same as parent state 15. Merge with its parent
  [MINIMIZATION-STATE 37] Retrieving its SR dict
    => (HE-SE-WI-HE) - SE-WI / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE) - HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE) - DA / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE) - SE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE) - HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE) - HE-DA / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 37] Testing with its parent state 15 ... 
  [MINIMIZATION-STATE 37] -> Different from parent 15. Now check with sibling nodes ...
  [MINIMIZATION-STATE 37] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 37] -> **** Unique state 37 found ****
  [MINIMIZATION-STATE 37] -> finishing state
  [MINIMIZATION-STATE 38] Retrieving its SR dict
    => (HE-SE-WI-SE-WI-SE-HE) - SE-WI / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-SE-WI-SE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-SE-WI-SE-HE) - DA / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-SE-WI-SE-HE) - SE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-SE-WI-SE-HE) - HE-DA / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 38] Testing with its parent state 15 ... 
  [MINIMIZATION-STATE 38] -> Different from parent 15. Now check with sibling nodes ...
  [MINIMIZATION-STATE 38] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 38] -> **** Unique state 38 found ****
  [MINIMIZATION-STATE 38] -> finishing state
  [MINIMIZATION-STATE 39] Retrieving its SR dict
    => (HE-SE-WI-DA) - SE-WI / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-DA) - HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-DA) - DA / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-DA) - SE / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (10) sec
    => (HE-SE-WI-DA) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (10) sec
  [MINIMIZATION-STATE 39] Testing with its parent state 15 ... 
  [MINIMIZATION-STATE 39] Same as parent state 15. Merge with its parent
  [MINIMIZATION-STATE 40] Retrieving its SR dict
    => (HE-SE-WI-SE) - SE-WI / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-SE) - HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-SE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-SE) - DA / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-SE) - SE / SE-WI-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-SE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (10) sec
    => (HE-SE-WI-SE) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (10) sec
  [MINIMIZATION-STATE 40] Testing with its parent state 15 ... 
  [MINIMIZATION-STATE 40] Same as parent state 15. Merge with its parent
  [MINIMIZATION-STATE 41] Retrieving its SR dict
    => (HE-SE-WI-HE) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE) - DA / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (10) sec
    => (HE-SE-WI-HE) - SE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (10) sec
    => (HE-SE-WI-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
  [MINIMIZATION-STATE 41] Testing with its parent state 15 ... 
  [MINIMIZATION-STATE 41] -> Different from parent 15. Now check with sibling nodes ...
  [MINIMIZATION-STATE 41] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 41] -> **** Unique state 41 found ****
  [MINIMIZATION-STATE 42] Retrieving its SR dict
    => (HE-SE-WI-HE-DA) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA) - DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA) - SE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 42] Testing with its parent state 15 ... 
  [MINIMIZATION-STATE 42] -> Different from parent 15. Now check with sibling nodes ...
  [MINIMIZATION-STATE 42] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 42] -> **** Unique state 42 found ****
  [MINIMIZATION-STATE 43] Retrieving its SR dict
    => (HE-HE-SE-WI) - SE-WI / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (10) sec
    => (HE-HE-SE-WI) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI) - DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (10) sec
    => (HE-HE-SE-WI) - SE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (10) sec
    => (HE-HE-SE-WI) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI) - HE-DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 43] Testing with its parent state 20 ... 
  [MINIMIZATION-STATE 43] -> Different from parent 20. Now check with sibling nodes ...
  [MINIMIZATION-STATE 43] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 43] -> **** Unique state 43 found ****
  [MINIMIZATION-STATE 44] Retrieving its SR dict
    => (HE-HE-HE) - SE-WI / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-HE) - HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-HE) - DA / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-HE) - SE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-HE) - HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-HE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
  [MINIMIZATION-STATE 44] Testing with its parent state 20 ... 
  [MINIMIZATION-STATE 44] -> Different from parent 20. Now check with sibling nodes ...
  [MINIMIZATION-STATE 44] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 44] -> **** Unique state 44 found ****
  [MINIMIZATION-STATE 44] -> finishing state
  [MINIMIZATION-STATE 45] Retrieving its SR dict
    => (HE-HE-SE-WI-SE-HE) - SE-WI / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-SE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-SE-HE) - DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-SE-HE) - SE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-SE-HE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 45] Testing with its parent state 20 ... 
  [MINIMIZATION-STATE 45] -> Different from parent 20. Now check with sibling nodes ...
  [MINIMIZATION-STATE 45] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 45] -> **** Unique state 45 found ****
  [MINIMIZATION-STATE 45] -> finishing state
  [MINIMIZATION-STATE 46] Retrieving its SR dict
    => (HE-HE-DA) - SE-WI / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (10) sec
    => (HE-HE-DA) - HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-DA) - DA / SE-WI-SE-HE-DA-HE-DA-GO 
    => (10) sec
    => (HE-HE-DA) - SE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (10) sec
    => (HE-HE-DA) - HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-DA) - HE-DA / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
  [MINIMIZATION-STATE 46] Testing with its parent state 20 ... 
  [MINIMIZATION-STATE 46] Same as parent state 20. Merge with its parent
  [MINIMIZATION-STATE 47] Retrieving its SR dict
    => (HE-HE-SE) - SE-WI / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (10) sec
    => (HE-HE-SE) - HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-SE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE) - DA / SE-WI-SE-HE-DA-HE-DA-GO 
    => (10) sec
    => (HE-HE-SE) - SE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (10) sec
    => (HE-HE-SE) - HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-SE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
  [MINIMIZATION-STATE 47] Testing with its parent state 20 ... 
  [MINIMIZATION-STATE 47] Same as parent state 20. Merge with its parent
  [MINIMIZATION-STATE 48] Retrieving its SR dict
    => (HE-HE-HE) - SE-WI / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-HE) - HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-HE) - DA / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-HE) - SE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-HE) - HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-HE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
  [MINIMIZATION-STATE 48] Testing with its parent state 20 ... 
  [MINIMIZATION-STATE 48] -> Different from parent 20. Now check with sibling nodes ...
  [MINIMIZATION-STATE 48] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 48] -> **** Unique state 48 found ****
  [MINIMIZATION-STATE 48] -> finishing state
  [MINIMIZATION-STATE 49] Retrieving its SR dict
    => (HE-HE-HE-DA) - SE-WI / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-HE-DA) - HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-HE-DA) - DA / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-HE-DA) - SE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-HE-DA) - HE / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
    => (HE-HE-HE-DA) - HE-DA / SE-WI-SE-HE-DA-HE-DA-GO 
    => (0) sec
  [MINIMIZATION-STATE 49] Testing with its parent state 20 ... 
  [MINIMIZATION-STATE 49] -> Different from parent 20. Now check with sibling nodes ...
  [MINIMIZATION-STATE 49] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 49] -> **** Unique state 49 found ****
  [MINIMIZATION-STATE 49] -> finishing state
  [MINIMIZATION-STATE 50] Retrieving its SR dict
    => (HE-HE-DA-SE-WI) - SE-WI / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-HE-DA-SE-WI) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI) - DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-HE-DA-SE-WI) - SE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-HE-DA-SE-WI) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 50] Testing with its parent state 21 ... 
  [MINIMIZATION-STATE 50] -> Different from parent 21. Now check with sibling nodes ...
  [MINIMIZATION-STATE 50] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 50] -> **** Unique state 50 found ****
  [MINIMIZATION-STATE 51] Retrieving its SR dict
    => (HE-HE-DA-HE) - SE-WI / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-HE) - HE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-HE) - DA / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-HE) - SE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-HE) - HE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-HE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 51] Testing with its parent state 21 ... 
  [MINIMIZATION-STATE 51] -> Different from parent 21. Now check with sibling nodes ...
  [MINIMIZATION-STATE 51] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 51] -> **** Unique state 51 found ****
  [MINIMIZATION-STATE 51] -> finishing state
  [MINIMIZATION-STATE 52] Retrieving its SR dict
    => (HE-HE-DA-SE-WI-SE-HE) - SE-WI / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-SE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-SE-HE) - DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-SE-HE) - SE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-SE-HE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 52] Testing with its parent state 21 ... 
  [MINIMIZATION-STATE 52] -> Different from parent 21. Now check with sibling nodes ...
  [MINIMIZATION-STATE 52] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 52] -> **** Unique state 52 found ****
  [MINIMIZATION-STATE 52] -> finishing state
  [MINIMIZATION-STATE 53] Retrieving its SR dict
    => (HE-HE-DA-DA) - SE-WI / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-HE-DA-DA) - HE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-DA) - DA / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (10) sec
    => (HE-HE-DA-DA) - SE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (10) sec
    => (HE-HE-DA-DA) - HE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-DA) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 53] Testing with its parent state 21 ... 
  [MINIMIZATION-STATE 53] Same as parent state 21. Merge with its parent
  [MINIMIZATION-STATE 54] Retrieving its SR dict
    => (HE-HE-DA-SE) - SE-WI / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-HE-DA-SE) - HE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-SE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE) - DA / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (10) sec
    => (HE-HE-DA-SE) - SE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (10) sec
    => (HE-HE-DA-SE) - HE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-SE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 54] Testing with its parent state 21 ... 
  [MINIMIZATION-STATE 54] Same as parent state 21. Merge with its parent
  [MINIMIZATION-STATE 55] Retrieving its SR dict
    => (HE-HE-DA-HE) - SE-WI / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-HE) - HE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-HE) - DA / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-HE) - SE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-HE) - HE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-HE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 55] Testing with its parent state 21 ... 
  [MINIMIZATION-STATE 55] -> Different from parent 21. Now check with sibling nodes ...
  [MINIMIZATION-STATE 55] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 55] -> **** Unique state 55 found ****
  [MINIMIZATION-STATE 55] -> finishing state
  [MINIMIZATION-STATE 56] Retrieving its SR dict
    => (HE-HE-DA-HE-DA) - SE-WI / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-HE-DA) - HE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-HE-DA) - DA / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-HE-DA) - SE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-HE-DA) - HE / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
    => (HE-HE-DA-HE-DA) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 56] Testing with its parent state 21 ... 
  [MINIMIZATION-STATE 56] -> Different from parent 21. Now check with sibling nodes ...
  [MINIMIZATION-STATE 56] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 56] -> **** Unique state 56 found ****
  [MINIMIZATION-STATE 56] -> finishing state
  [MINIMIZATION-STATE 57] Retrieving its SR dict
    => (SE-WI-SE-HE-HE-DA-SE-WI) - SE-WI / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-SE-WI) - HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-SE-WI) - DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-SE-WI) - SE / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-SE-WI) - HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-SE-WI) - HE-DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 57] Testing with its parent state 28 ... 
  [MINIMIZATION-STATE 57] -> Different from parent 28. Now check with sibling nodes ...
  [MINIMIZATION-STATE 57] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 57] -> **** Unique state 57 found ****
  [MINIMIZATION-STATE 57] -> finishing state
  [MINIMIZATION-STATE 58] Retrieving its SR dict
    => (SE-WI-SE-HE-HE-DA-HE) - SE-WI / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-HE) - HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-HE) - DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-HE) - SE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-HE) - HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-HE) - HE-DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 58] Testing with its parent state 28 ... 
  [MINIMIZATION-STATE 58] -> Different from parent 28. Now check with sibling nodes ...
  [MINIMIZATION-STATE 58] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 58] -> **** Unique state 58 found ****
  [MINIMIZATION-STATE 58] -> finishing state
  [MINIMIZATION-STATE 59] Retrieving its SR dict
    => (SE-WI-SE-HE-HE-DA-SE-WI-SE-HE) - SE-WI / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-SE-WI-SE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-SE-WI-SE-HE) - DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-SE-WI-SE-HE) - SE / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-SE-WI-SE-HE) - HE-DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 59] Testing with its parent state 28 ... 
  [MINIMIZATION-STATE 59] -> Different from parent 28. Now check with sibling nodes ...
  [MINIMIZATION-STATE 59] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 59] -> **** Unique state 59 found ****
  [MINIMIZATION-STATE 59] -> finishing state
  [MINIMIZATION-STATE 60] Retrieving its SR dict
    => (SE-WI-SE-HE-HE-DA-DA) - SE-WI / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-DA) - HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-DA) - DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (10) sec
    => (SE-WI-SE-HE-HE-DA-DA) - SE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (10) sec
    => (SE-WI-SE-HE-HE-DA-DA) - HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-DA) - HE-DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 60] Testing with its parent state 28 ... 
  [MINIMIZATION-STATE 60] Same as parent state 28. Merge with its parent
  [MINIMIZATION-STATE 61] Retrieving its SR dict
    => (SE-WI-SE-HE-HE-DA-SE) - SE-WI / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-SE) - HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-SE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-SE-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-SE) - DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (10) sec
    => (SE-WI-SE-HE-HE-DA-SE) - SE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (10) sec
    => (SE-WI-SE-HE-HE-DA-SE) - HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-SE) - HE-DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 61] Testing with its parent state 28 ... 
  [MINIMIZATION-STATE 61] Same as parent state 28. Merge with its parent
  [MINIMIZATION-STATE 62] Retrieving its SR dict
    => (SE-WI-SE-HE-HE-DA-HE) - SE-WI / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-HE) - HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-HE) - DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-HE) - SE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-HE) - HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-HE) - HE-DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 62] Testing with its parent state 28 ... 
  [MINIMIZATION-STATE 62] -> Different from parent 28. Now check with sibling nodes ...
  [MINIMIZATION-STATE 62] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 62] -> **** Unique state 62 found ****
  [MINIMIZATION-STATE 62] -> finishing state
  [MINIMIZATION-STATE 63] Retrieving its SR dict
    => (SE-WI-SE-HE-HE-DA-HE-DA) - SE-WI / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-HE-DA) - HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-HE-DA) - DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-HE-DA) - SE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-HE-DA) - HE / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
    => (SE-WI-SE-HE-HE-DA-HE-DA) - HE-DA / SE-WI-SE-HE-DA-WI-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 63] Testing with its parent state 28 ... 
  [MINIMIZATION-STATE 63] -> Different from parent 28. Now check with sibling nodes ...
  [MINIMIZATION-STATE 63] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 63] -> **** Unique state 63 found ****
  [MINIMIZATION-STATE 63] -> finishing state
  [MINIMIZATION-STATE 64] Retrieving its SR dict
    => (HE-DA-SE-WI-SE-WI) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-DA-SE-WI-SE-WI) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-SE-WI) - DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-DA-SE-WI-SE-WI) - SE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-DA-SE-WI-SE-WI) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-SE-WI) - HE-DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 64] Testing with its parent state 29 ... 
  [MINIMIZATION-STATE 64] Same as parent state 29. Merge with its parent
  [MINIMIZATION-STATE 65] Retrieving its SR dict
    => (HE-DA-SE-WI-HE) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-HE) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-HE) - DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-HE) - SE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-HE) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-HE) - HE-DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 65] Testing with its parent state 29 ... 
  [MINIMIZATION-STATE 65] -> Different from parent 29. Now check with sibling nodes ...
  [MINIMIZATION-STATE 65] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 65] -> **** Unique state 65 found ****
  [MINIMIZATION-STATE 65] -> finishing state
  [MINIMIZATION-STATE 66] Retrieving its SR dict
    => (HE-DA-SE-WI-SE-WI-SE-HE) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-SE-WI-SE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-SE-WI-SE-HE) - DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-SE-WI-SE-HE) - SE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-SE-WI-SE-HE) - HE-DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 66] Testing with its parent state 29 ... 
  [MINIMIZATION-STATE 66] -> Different from parent 29. Now check with sibling nodes ...
  [MINIMIZATION-STATE 66] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 66] -> **** Unique state 66 found ****
  [MINIMIZATION-STATE 66] -> finishing state
  [MINIMIZATION-STATE 67] Retrieving its SR dict
    => (HE-DA-SE-WI-DA) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-DA-SE-WI-DA) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-DA) - DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-DA-SE-WI-DA) - SE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-DA-SE-WI-DA) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-DA) - HE-DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 67] Testing with its parent state 29 ... 
  [MINIMIZATION-STATE 67] Same as parent state 29. Merge with its parent
  [MINIMIZATION-STATE 68] Retrieving its SR dict
    => (HE-DA-SE-WI-SE) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-DA-SE-WI-SE) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-SE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-SE) - DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-DA-SE-WI-SE) - SE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-DA-SE-WI-SE) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-SE) - HE-DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 68] Testing with its parent state 29 ... 
  [MINIMIZATION-STATE 68] Same as parent state 29. Merge with its parent
  [MINIMIZATION-STATE 69] Retrieving its SR dict
    => (HE-DA-SE-WI-HE) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-HE) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-HE) - DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-HE) - SE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-HE) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-HE) - HE-DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 69] Testing with its parent state 29 ... 
  [MINIMIZATION-STATE 69] -> Different from parent 29. Now check with sibling nodes ...
  [MINIMIZATION-STATE 69] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 69] -> **** Unique state 69 found ****
  [MINIMIZATION-STATE 69] -> finishing state
  [MINIMIZATION-STATE 70] Retrieving its SR dict
    => (HE-DA-SE-WI-HE-DA) - SE-WI / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-HE-DA) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-HE-DA) - DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-HE-DA) - SE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-HE-DA) - HE / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-DA-SE-WI-HE-DA) - HE-DA / SE-WI-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 70] Testing with its parent state 29 ... 
  [MINIMIZATION-STATE 70] -> Different from parent 29. Now check with sibling nodes ...
  [MINIMIZATION-STATE 70] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 70] -> **** Unique state 70 found ****
  [MINIMIZATION-STATE 70] -> finishing state
  [+] State minimization end in level 3. (Mon Apr  3 14:53:02 2023)
  [+] --- Finished level 4 | Time elapsed 1814.976722240448 ---
  [+] --- Starting level 4 ---
  [+] State expansion start in level 4. (Mon Apr  3 14:53:02 2023)
  [EXPANSION-LEAF] Expanding leaf state 41 (1/4 leaves)
    [EXPANSION-STATE-'41'] move Frame: HE-SE-WI-HE, send Frame: SE-WI (1/7 msgs)
    => (HE-SE-WI-HE) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (10) sec
    [+] Candidate state 71 added (41 -> 71)
    [EXPANSION-STATE-'41'] move Frame: HE-SE-WI-HE, send Frame: HE (2/7 msgs)
    => (HE-SE-WI-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    [+] Candidate state 72 added (41 -> 72)
    [EXPANSION-STATE-'41'] move Frame: HE-SE-WI-HE, send Frame: SE-WI-SE-HE (3/7 msgs)
    => (HE-SE-WI-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    [+] Candidate state 73 added (41 -> 73)
    [EXPANSION-STATE-'41'] move Frame: HE-SE-WI-HE, send Frame: DA (4/7 msgs)
    => (HE-SE-WI-HE) - DA / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (10) sec
    [+] Candidate state 74 added (41 -> 74)
    [EXPANSION-STATE-'41'] move Frame: HE-SE-WI-HE, send Frame: SE (5/7 msgs)
    => (HE-SE-WI-HE) - SE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (10) sec
    [+] Candidate state 75 added (41 -> 75)
    [EXPANSION-STATE-'41'] move Frame: HE-SE-WI-HE, send Frame: HE (6/7 msgs)
    => (HE-SE-WI-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    [+] Candidate state 76 added (41 -> 76)
    [EXPANSION-STATE-'41'] move Frame: HE-SE-WI-HE, send Frame: HE-DA (7/7 msgs)
    => (HE-SE-WI-HE) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    [+] Candidate state 77 added (41 -> 77)
  [EXPANSION-LEAF] Expanding leaf state 42 (2/4 leaves)
    [EXPANSION-STATE-'42'] move Frame: HE-SE-WI-HE-DA, send Frame: SE-WI (1/7 msgs)
    => (HE-SE-WI-HE-DA) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (10) sec
    [+] Candidate state 78 added (42 -> 78)
    [EXPANSION-STATE-'42'] move Frame: HE-SE-WI-HE-DA, send Frame: HE (2/7 msgs)
    => (HE-SE-WI-HE-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    [+] Candidate state 79 added (42 -> 79)
    [EXPANSION-STATE-'42'] move Frame: HE-SE-WI-HE-DA, send Frame: SE-WI-SE-HE (3/7 msgs)
    => (HE-SE-WI-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    [+] Candidate state 80 added (42 -> 80)
    [EXPANSION-STATE-'42'] move Frame: HE-SE-WI-HE-DA, send Frame: DA (4/7 msgs)
    => (HE-SE-WI-HE-DA) - DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (10) sec
    [+] Candidate state 81 added (42 -> 81)
    [EXPANSION-STATE-'42'] move Frame: HE-SE-WI-HE-DA, send Frame: SE (5/7 msgs)
    => (HE-SE-WI-HE-DA) - SE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (10) sec
    [+] Candidate state 82 added (42 -> 82)
    [EXPANSION-STATE-'42'] move Frame: HE-SE-WI-HE-DA, send Frame: HE (6/7 msgs)
    => (HE-SE-WI-HE-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    [+] Candidate state 83 added (42 -> 83)
    [EXPANSION-STATE-'42'] move Frame: HE-SE-WI-HE-DA, send Frame: HE-DA (7/7 msgs)
    => (HE-SE-WI-HE-DA) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    [+] Candidate state 84 added (42 -> 84)
  [EXPANSION-LEAF] Expanding leaf state 43 (3/4 leaves)
    [EXPANSION-STATE-'43'] move Frame: HE-HE-SE-WI, send Frame: SE-WI (1/7 msgs)
    => (HE-HE-SE-WI) - SE-WI / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (10) sec
    [+] Candidate state 85 added (43 -> 85)
    [EXPANSION-STATE-'43'] move Frame: HE-HE-SE-WI, send Frame: HE (2/7 msgs)
    => (HE-HE-SE-WI) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    [+] Candidate state 86 added (43 -> 86)
    [EXPANSION-STATE-'43'] move Frame: HE-HE-SE-WI, send Frame: SE-WI-SE-HE (3/7 msgs)
    => (HE-HE-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    [+] Candidate state 87 added (43 -> 87)
    [EXPANSION-STATE-'43'] move Frame: HE-HE-SE-WI, send Frame: DA (4/7 msgs)
    => (HE-HE-SE-WI) - DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (10) sec
    [+] Candidate state 88 added (43 -> 88)
    [EXPANSION-STATE-'43'] move Frame: HE-HE-SE-WI, send Frame: SE (5/7 msgs)
    => (HE-HE-SE-WI) - SE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (10) sec
    [+] Candidate state 89 added (43 -> 89)
    [EXPANSION-STATE-'43'] move Frame: HE-HE-SE-WI, send Frame: HE (6/7 msgs)
    => (HE-HE-SE-WI) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    [+] Candidate state 90 added (43 -> 90)
    [EXPANSION-STATE-'43'] move Frame: HE-HE-SE-WI, send Frame: HE-DA (7/7 msgs)
    => (HE-HE-SE-WI) - HE-DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    [+] Candidate state 91 added (43 -> 91)
  [EXPANSION-LEAF] Expanding leaf state 50 (4/4 leaves)
    [EXPANSION-STATE-'50'] move Frame: HE-HE-DA-SE-WI, send Frame: SE-WI (1/7 msgs)
    => (HE-HE-DA-SE-WI) - SE-WI / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (10) sec
    [+] Candidate state 92 added (50 -> 92)
    [EXPANSION-STATE-'50'] move Frame: HE-HE-DA-SE-WI, send Frame: HE (2/7 msgs)
    => (HE-HE-DA-SE-WI) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    [+] Candidate state 93 added (50 -> 93)
    [EXPANSION-STATE-'50'] move Frame: HE-HE-DA-SE-WI, send Frame: SE-WI-SE-HE (3/7 msgs)
    => (HE-HE-DA-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    [+] Candidate state 94 added (50 -> 94)
    [EXPANSION-STATE-'50'] move Frame: HE-HE-DA-SE-WI, send Frame: DA (4/7 msgs)
    => (HE-HE-DA-SE-WI) - DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (10) sec
    [+] Candidate state 95 added (50 -> 95)
    [EXPANSION-STATE-'50'] move Frame: HE-HE-DA-SE-WI, send Frame: SE (5/7 msgs)
    => (HE-HE-DA-SE-WI) - SE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (10) sec
    [+] Candidate state 96 added (50 -> 96)
    [EXPANSION-STATE-'50'] move Frame: HE-HE-DA-SE-WI, send Frame: HE (6/7 msgs)
    => (HE-HE-DA-SE-WI) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    [+] Candidate state 97 added (50 -> 97)
    [EXPANSION-STATE-'50'] move Frame: HE-HE-DA-SE-WI, send Frame: HE-DA (7/7 msgs)
    => (HE-HE-DA-SE-WI) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    [+] Candidate state 98 added (50 -> 98)
  [+] State expansion end in level 4. (Mon Apr  3 14:55:04 2023)
state list length : 14
['init', '1', '2', '3', '7', '15', '20', '21', '28', '29', '41', '42', '43', '50']
state list length : 28
['71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98']
  [+] State minimization start in level 4. (Mon Apr  3 14:55:04 2023)
  [INFO] Test 28 candidate states in level 4
  [MINIMIZATION-STATE 71] Retrieving its SR dict
    => (HE-SE-WI-HE-SE-WI) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-SE-WI) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI) - DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-SE-WI) - SE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-SE-WI) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 71] Testing with its parent state 41 ... 
  [MINIMIZATION-STATE 71] -> Different from parent 41. Now check with sibling nodes ...
  [MINIMIZATION-STATE 71] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 71] -> **** Unique state 71 found ****
  [MINIMIZATION-STATE 72] Retrieving its SR dict
    => (HE-SE-WI-HE-HE) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-HE) - DA / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-HE) - SE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-HE) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
  [MINIMIZATION-STATE 72] Testing with its parent state 41 ... 
  [MINIMIZATION-STATE 72] -> Different from parent 41. Now check with sibling nodes ...
  [MINIMIZATION-STATE 72] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 72] -> **** Unique state 72 found ****
  [MINIMIZATION-STATE 72] -> finishing state
  [MINIMIZATION-STATE 73] Retrieving its SR dict
    => (HE-SE-WI-HE-SE-WI-SE-HE) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-SE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-SE-HE) - DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-SE-HE) - SE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-SE-HE) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 73] Testing with its parent state 41 ... 
  [MINIMIZATION-STATE 73] -> Different from parent 41. Now check with sibling nodes ...
  [MINIMIZATION-STATE 73] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 73] -> **** Unique state 73 found ****
  [MINIMIZATION-STATE 73] -> finishing state
  [MINIMIZATION-STATE 74] Retrieving its SR dict
    => (HE-SE-WI-HE-DA) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA) - DA / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA) - SE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
  [MINIMIZATION-STATE 74] Testing with its parent state 41 ... 
  [MINIMIZATION-STATE 74] Same as parent state 41. Merge with its parent
  [MINIMIZATION-STATE 75] Retrieving its SR dict
    => (HE-SE-WI-HE-SE) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-SE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE) - DA / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (10) sec
    => (HE-SE-WI-HE-SE) - SE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (10) sec
    => (HE-SE-WI-HE-SE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
  [MINIMIZATION-STATE 75] Testing with its parent state 41 ... 
  [MINIMIZATION-STATE 75] Same as parent state 41. Merge with its parent
  [MINIMIZATION-STATE 76] Retrieving its SR dict
    => (HE-SE-WI-HE-HE) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-HE) - DA / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-HE) - SE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-HE) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
  [MINIMIZATION-STATE 76] Testing with its parent state 41 ... 
  [MINIMIZATION-STATE 76] -> Different from parent 41. Now check with sibling nodes ...
  [MINIMIZATION-STATE 76] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 76] -> **** Unique state 76 found ****
  [MINIMIZATION-STATE 76] -> finishing state
  [MINIMIZATION-STATE 77] Retrieving its SR dict
    => (HE-SE-WI-HE-HE-DA) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-HE-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-HE-DA) - DA / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-HE-DA) - SE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-HE-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
    => (HE-SE-WI-HE-HE-DA) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-GO 
    => (0) sec
  [MINIMIZATION-STATE 77] Testing with its parent state 41 ... 
  [MINIMIZATION-STATE 77] -> Different from parent 41. Now check with sibling nodes ...
  [MINIMIZATION-STATE 77] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 77] -> **** Unique state 77 found ****
  [MINIMIZATION-STATE 77] -> finishing state
  [MINIMIZATION-STATE 78] Retrieving its SR dict
    => (HE-SE-WI-HE-DA-SE-WI) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA-SE-WI) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI) - DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA-SE-WI) - SE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA-SE-WI) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 78] Testing with its parent state 42 ... 
  [MINIMIZATION-STATE 78] -> Different from parent 42. Now check with sibling nodes ...
  [MINIMIZATION-STATE 78] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 78] -> **** Unique state 78 found ****
  [MINIMIZATION-STATE 79] Retrieving its SR dict
    => (HE-SE-WI-HE-DA-HE) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-HE) - DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-HE) - SE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-HE) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 79] Testing with its parent state 42 ... 
  [MINIMIZATION-STATE 79] -> Different from parent 42. Now check with sibling nodes ...
  [MINIMIZATION-STATE 79] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 79] -> **** Unique state 79 found ****
  [MINIMIZATION-STATE 79] -> finishing state
  [MINIMIZATION-STATE 80] Retrieving its SR dict
    => (HE-SE-WI-HE-DA-SE-WI-SE-HE) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE-HE) - DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE-HE) - SE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE-HE) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 80] Testing with its parent state 42 ... 
  [MINIMIZATION-STATE 80] -> Different from parent 42. Now check with sibling nodes ...
  [MINIMIZATION-STATE 80] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 80] -> **** Unique state 80 found ****
  [MINIMIZATION-STATE 80] -> finishing state
  [MINIMIZATION-STATE 81] Retrieving its SR dict
    => (HE-SE-WI-HE-DA-DA) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-DA) - DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA-DA) - SE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-DA) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 81] Testing with its parent state 42 ... 
  [MINIMIZATION-STATE 81] Same as parent state 42. Merge with its parent
  [MINIMIZATION-STATE 82] Retrieving its SR dict
    => (HE-SE-WI-HE-DA-SE) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA-SE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE) - DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA-SE) - SE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA-SE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 82] Testing with its parent state 42 ... 
  [MINIMIZATION-STATE 82] Same as parent state 42. Merge with its parent
  [MINIMIZATION-STATE 83] Retrieving its SR dict
    => (HE-SE-WI-HE-DA-HE) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-HE) - DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-HE) - SE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-HE) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 83] Testing with its parent state 42 ... 
  [MINIMIZATION-STATE 83] -> Different from parent 42. Now check with sibling nodes ...
  [MINIMIZATION-STATE 83] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 83] -> **** Unique state 83 found ****
  [MINIMIZATION-STATE 83] -> finishing state
  [MINIMIZATION-STATE 84] Retrieving its SR dict
    => (HE-SE-WI-HE-DA-HE-DA) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-HE-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-HE-DA) - DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-HE-DA) - SE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-HE-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-HE-DA) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-GO 
    => (0) sec
  [MINIMIZATION-STATE 84] Testing with its parent state 42 ... 
  [MINIMIZATION-STATE 84] -> Different from parent 42. Now check with sibling nodes ...
  [MINIMIZATION-STATE 84] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 84] -> **** Unique state 84 found ****
  [MINIMIZATION-STATE 84] -> finishing state
  [MINIMIZATION-STATE 85] Retrieving its SR dict
    => (HE-HE-SE-WI-SE-WI) - SE-WI / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (10) sec
    => (HE-HE-SE-WI-SE-WI) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-SE-WI) - DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (10) sec
    => (HE-HE-SE-WI-SE-WI) - SE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (10) sec
    => (HE-HE-SE-WI-SE-WI) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-SE-WI) - HE-DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 85] Testing with its parent state 43 ... 
  [MINIMIZATION-STATE 85] Same as parent state 43. Merge with its parent
  [MINIMIZATION-STATE 86] Retrieving its SR dict
    => (HE-HE-SE-WI-HE) - SE-WI / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-HE) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-HE) - DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-HE) - SE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-HE) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-HE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 86] Testing with its parent state 43 ... 
  [MINIMIZATION-STATE 86] -> Different from parent 43. Now check with sibling nodes ...
  [MINIMIZATION-STATE 86] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 86] -> **** Unique state 86 found ****
  [MINIMIZATION-STATE 86] -> finishing state
  [MINIMIZATION-STATE 87] Retrieving its SR dict
    => (HE-HE-SE-WI-SE-WI-SE-HE) - SE-WI / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-SE-WI-SE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-SE-WI-SE-HE) - DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-SE-WI-SE-HE) - SE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-SE-WI-SE-HE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 87] Testing with its parent state 43 ... 
  [MINIMIZATION-STATE 87] -> Different from parent 43. Now check with sibling nodes ...
  [MINIMIZATION-STATE 87] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 87] -> **** Unique state 87 found ****
  [MINIMIZATION-STATE 87] -> finishing state
  [MINIMIZATION-STATE 88] Retrieving its SR dict
    => (HE-HE-SE-WI-DA) - SE-WI / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (10) sec
    => (HE-HE-SE-WI-DA) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-DA) - DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (10) sec
    => (HE-HE-SE-WI-DA) - SE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (10) sec
    => (HE-HE-SE-WI-DA) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-DA) - HE-DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 88] Testing with its parent state 43 ... 
  [MINIMIZATION-STATE 88] Same as parent state 43. Merge with its parent
  [MINIMIZATION-STATE 89] Retrieving its SR dict
    => (HE-HE-SE-WI-SE) - SE-WI / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (10) sec
    => (HE-HE-SE-WI-SE) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-SE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-SE) - DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (10) sec
    => (HE-HE-SE-WI-SE) - SE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (10) sec
    => (HE-HE-SE-WI-SE) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-SE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 89] Testing with its parent state 43 ... 
  [MINIMIZATION-STATE 89] Same as parent state 43. Merge with its parent
  [MINIMIZATION-STATE 90] Retrieving its SR dict
    => (HE-HE-SE-WI-HE) - SE-WI / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-HE) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-HE) - DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-HE) - SE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-HE) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-HE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 90] Testing with its parent state 43 ... 
  [MINIMIZATION-STATE 90] -> Different from parent 43. Now check with sibling nodes ...
  [MINIMIZATION-STATE 90] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 90] -> **** Unique state 90 found ****
  [MINIMIZATION-STATE 90] -> finishing state
  [MINIMIZATION-STATE 91] Retrieving its SR dict
    => (HE-HE-SE-WI-HE-DA) - SE-WI / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-HE-DA) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-HE-DA) - DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-HE-DA) - SE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-HE-DA) - HE / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
    => (HE-HE-SE-WI-HE-DA) - HE-DA / SE-WI-SE-HE-DA-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 91] Testing with its parent state 43 ... 
  [MINIMIZATION-STATE 91] -> Different from parent 43. Now check with sibling nodes ...
  [MINIMIZATION-STATE 91] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 91] -> **** Unique state 91 found ****
  [MINIMIZATION-STATE 91] -> finishing state
  [MINIMIZATION-STATE 92] Retrieving its SR dict
    => (HE-HE-DA-SE-WI-SE-WI) - SE-WI / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-HE-DA-SE-WI-SE-WI) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-SE-WI) - DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-HE-DA-SE-WI-SE-WI) - SE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-HE-DA-SE-WI-SE-WI) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-SE-WI) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 92] Testing with its parent state 50 ... 
  [MINIMIZATION-STATE 92] Same as parent state 50. Merge with its parent
  [MINIMIZATION-STATE 93] Retrieving its SR dict
    => (HE-HE-DA-SE-WI-HE) - SE-WI / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-HE) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-HE) - DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-HE) - SE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-HE) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-HE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 93] Testing with its parent state 50 ... 
  [MINIMIZATION-STATE 93] -> Different from parent 50. Now check with sibling nodes ...
  [MINIMIZATION-STATE 93] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 93] -> **** Unique state 93 found ****
  [MINIMIZATION-STATE 93] -> finishing state
  [MINIMIZATION-STATE 94] Retrieving its SR dict
    => (HE-HE-DA-SE-WI-SE-WI-SE-HE) - SE-WI / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-SE-WI-SE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-SE-WI-SE-HE) - DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-SE-WI-SE-HE) - SE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-SE-WI-SE-HE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 94] Testing with its parent state 50 ... 
  [MINIMIZATION-STATE 94] -> Different from parent 50. Now check with sibling nodes ...
  [MINIMIZATION-STATE 94] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 94] -> **** Unique state 94 found ****
  [MINIMIZATION-STATE 94] -> finishing state
  [MINIMIZATION-STATE 95] Retrieving its SR dict
    => (HE-HE-DA-SE-WI-DA) - SE-WI / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-HE-DA-SE-WI-DA) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-DA) - DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-HE-DA-SE-WI-DA) - SE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-HE-DA-SE-WI-DA) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-DA) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 95] Testing with its parent state 50 ... 
  [MINIMIZATION-STATE 95] Same as parent state 50. Merge with its parent
  [MINIMIZATION-STATE 96] Retrieving its SR dict
    => (HE-HE-DA-SE-WI-SE) - SE-WI / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-HE-DA-SE-WI-SE) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-SE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-SE) - DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-HE-DA-SE-WI-SE) - SE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-HE-DA-SE-WI-SE) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-SE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 96] Testing with its parent state 50 ... 
  [MINIMIZATION-STATE 96] Same as parent state 50. Merge with its parent
  [MINIMIZATION-STATE 97] Retrieving its SR dict
    => (HE-HE-DA-SE-WI-HE) - SE-WI / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-HE) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-HE) - DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-HE) - SE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-HE) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-HE) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 97] Testing with its parent state 50 ... 
  [MINIMIZATION-STATE 97] -> Different from parent 50. Now check with sibling nodes ...
  [MINIMIZATION-STATE 97] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 97] -> **** Unique state 97 found ****
  [MINIMIZATION-STATE 97] -> finishing state
  [MINIMIZATION-STATE 98] Retrieving its SR dict
    => (HE-HE-DA-SE-WI-HE-DA) - SE-WI / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-HE-DA) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-HE-DA) - DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-HE-DA) - SE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-HE-DA) - HE / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-HE-DA-SE-WI-HE-DA) - HE-DA / SE-WI-SE-HE-DA-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 98] Testing with its parent state 50 ... 
  [MINIMIZATION-STATE 98] -> Different from parent 50. Now check with sibling nodes ...
  [MINIMIZATION-STATE 98] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 98] -> **** Unique state 98 found ****
  [MINIMIZATION-STATE 98] -> finishing state
  [+] State minimization end in level 4. (Mon Apr  3 15:01:14 2023)
  [+] --- Finished level 5 | Time elapsed 2307.0993485450745 ---
  [+] --- Starting level 5 ---
  [+] State expansion start in level 5. (Mon Apr  3 15:01:15 2023)
  [EXPANSION-LEAF] Expanding leaf state 71 (1/2 leaves)
    [EXPANSION-STATE-'71'] move Frame: HE-SE-WI-HE-SE-WI, send Frame: SE-WI (1/7 msgs)
    => (HE-SE-WI-HE-SE-WI) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (10) sec
    [+] Candidate state 99 added (71 -> 99)
    [EXPANSION-STATE-'71'] move Frame: HE-SE-WI-HE-SE-WI, send Frame: HE (2/7 msgs)
    => (HE-SE-WI-HE-SE-WI) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    [+] Candidate state 100 added (71 -> 100)
    [EXPANSION-STATE-'71'] move Frame: HE-SE-WI-HE-SE-WI, send Frame: SE-WI-SE-HE (3/7 msgs)
    => (HE-SE-WI-HE-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    [+] Candidate state 101 added (71 -> 101)
    [EXPANSION-STATE-'71'] move Frame: HE-SE-WI-HE-SE-WI, send Frame: DA (4/7 msgs)
    => (HE-SE-WI-HE-SE-WI) - DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (10) sec
    [+] Candidate state 102 added (71 -> 102)
    [EXPANSION-STATE-'71'] move Frame: HE-SE-WI-HE-SE-WI, send Frame: SE (5/7 msgs)
    => (HE-SE-WI-HE-SE-WI) - SE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (10) sec
    [+] Candidate state 103 added (71 -> 103)
    [EXPANSION-STATE-'71'] move Frame: HE-SE-WI-HE-SE-WI, send Frame: HE (6/7 msgs)
    => (HE-SE-WI-HE-SE-WI) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    [+] Candidate state 104 added (71 -> 104)
    [EXPANSION-STATE-'71'] move Frame: HE-SE-WI-HE-SE-WI, send Frame: HE-DA (7/7 msgs)
    => (HE-SE-WI-HE-SE-WI) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    [+] Candidate state 105 added (71 -> 105)
  [EXPANSION-LEAF] Expanding leaf state 78 (2/2 leaves)
    [EXPANSION-STATE-'78'] move Frame: HE-SE-WI-HE-DA-SE-WI, send Frame: SE-WI (1/7 msgs)
    => (HE-SE-WI-HE-DA-SE-WI) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (10) sec
    [+] Candidate state 106 added (78 -> 106)
    [EXPANSION-STATE-'78'] move Frame: HE-SE-WI-HE-DA-SE-WI, send Frame: HE (2/7 msgs)
    => (HE-SE-WI-HE-DA-SE-WI) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    [+] Candidate state 107 added (78 -> 107)
    [EXPANSION-STATE-'78'] move Frame: HE-SE-WI-HE-DA-SE-WI, send Frame: SE-WI-SE-HE (3/7 msgs)
    => (HE-SE-WI-HE-DA-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    [+] Candidate state 108 added (78 -> 108)
    [EXPANSION-STATE-'78'] move Frame: HE-SE-WI-HE-DA-SE-WI, send Frame: DA (4/7 msgs)
    => (HE-SE-WI-HE-DA-SE-WI) - DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (10) sec
    [+] Candidate state 109 added (78 -> 109)
    [EXPANSION-STATE-'78'] move Frame: HE-SE-WI-HE-DA-SE-WI, send Frame: SE (5/7 msgs)
    => (HE-SE-WI-HE-DA-SE-WI) - SE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (10) sec
    [+] Candidate state 110 added (78 -> 110)
    [EXPANSION-STATE-'78'] move Frame: HE-SE-WI-HE-DA-SE-WI, send Frame: HE (6/7 msgs)
    => (HE-SE-WI-HE-DA-SE-WI) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    [+] Candidate state 111 added (78 -> 111)
    [EXPANSION-STATE-'78'] move Frame: HE-SE-WI-HE-DA-SE-WI, send Frame: HE-DA (7/7 msgs)
    => (HE-SE-WI-HE-DA-SE-WI) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    [+] Candidate state 112 added (78 -> 112)
  [+] State expansion end in level 5. (Mon Apr  3 15:02:15 2023)
state list length : 16
['init', '1', '2', '3', '7', '15', '20', '21', '28', '29', '41', '42', '43', '50', '71', '78']
state list length : 14
['99', '100', '101', '102', '103', '104', '105', '106', '107', '108', '109', '110', '111', '112']
  [+] State minimization start in level 5. (Mon Apr  3 15:02:15 2023)
  [INFO] Test 14 candidate states in level 5
  [MINIMIZATION-STATE 99] Retrieving its SR dict
    => (HE-SE-WI-HE-SE-WI-SE-WI) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-SE-WI-SE-WI) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-SE-WI) - DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-SE-WI-SE-WI) - SE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-SE-WI-SE-WI) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-SE-WI) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 99] Testing with its parent state 71 ... 
  [MINIMIZATION-STATE 99] Same as parent state 71. Merge with its parent
  [MINIMIZATION-STATE 100] Retrieving its SR dict
    => (HE-SE-WI-HE-SE-WI-HE) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-HE) - DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-HE) - SE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-HE) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 100] Testing with its parent state 71 ... 
  [MINIMIZATION-STATE 100] -> Different from parent 71. Now check with sibling nodes ...
  [MINIMIZATION-STATE 100] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 100] -> **** Unique state 100 found ****
  [MINIMIZATION-STATE 100] -> finishing state
  [MINIMIZATION-STATE 101] Retrieving its SR dict
    => (HE-SE-WI-HE-SE-WI-SE-WI-SE-HE) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-SE-WI-SE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-SE-WI-SE-HE) - DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-SE-WI-SE-HE) - SE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-SE-WI-SE-HE) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 101] Testing with its parent state 71 ... 
  [MINIMIZATION-STATE 101] -> Different from parent 71. Now check with sibling nodes ...
  [MINIMIZATION-STATE 101] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 101] -> **** Unique state 101 found ****
  [MINIMIZATION-STATE 101] -> finishing state
  [MINIMIZATION-STATE 102] Retrieving its SR dict
    => (HE-SE-WI-HE-SE-WI-DA) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-SE-WI-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-DA) - DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-SE-WI-DA) - SE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-SE-WI-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-DA) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 102] Testing with its parent state 71 ... 
  [MINIMIZATION-STATE 102] Same as parent state 71. Merge with its parent
  [MINIMIZATION-STATE 103] Retrieving its SR dict
    => (HE-SE-WI-HE-SE-WI-SE) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-SE-WI-SE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-SE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-SE) - DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-SE-WI-SE) - SE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-SE-WI-SE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-SE) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 103] Testing with its parent state 71 ... 
  [MINIMIZATION-STATE 103] Same as parent state 71. Merge with its parent
  [MINIMIZATION-STATE 104] Retrieving its SR dict
    => (HE-SE-WI-HE-SE-WI-HE) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-HE) - DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-HE) - SE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-HE) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 104] Testing with its parent state 71 ... 
  [MINIMIZATION-STATE 104] -> Different from parent 71. Now check with sibling nodes ...
  [MINIMIZATION-STATE 104] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 104] -> **** Unique state 104 found ****
  [MINIMIZATION-STATE 104] -> finishing state
  [MINIMIZATION-STATE 105] Retrieving its SR dict
    => (HE-SE-WI-HE-SE-WI-HE-DA) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-HE-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-HE-DA) - DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-HE-DA) - SE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-HE-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-SE-WI-HE-DA) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 105] Testing with its parent state 71 ... 
  [MINIMIZATION-STATE 105] -> Different from parent 71. Now check with sibling nodes ...
  [MINIMIZATION-STATE 105] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 105] -> **** Unique state 105 found ****
  [MINIMIZATION-STATE 105] -> finishing state
  [MINIMIZATION-STATE 106] Retrieving its SR dict
    => (HE-SE-WI-HE-DA-SE-WI-SE-WI) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE-WI) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE-WI) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE-WI) - DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE-WI) - SE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE-WI) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE-WI) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 106] Testing with its parent state 78 ... 
  [MINIMIZATION-STATE 106] Same as parent state 78. Merge with its parent
  [MINIMIZATION-STATE 107] Retrieving its SR dict
    => (HE-SE-WI-HE-DA-SE-WI-HE) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-HE) - DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-HE) - SE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-HE) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 107] Testing with its parent state 78 ... 
  [MINIMIZATION-STATE 107] -> Different from parent 78. Now check with sibling nodes ...
  [MINIMIZATION-STATE 107] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 107] -> **** Unique state 107 found ****
  [MINIMIZATION-STATE 107] -> finishing state
  [MINIMIZATION-STATE 108] Retrieving its SR dict
    => (HE-SE-WI-HE-DA-SE-WI-SE-WI-SE-HE) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE-WI-SE-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE-WI-SE-HE) - DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE-WI-SE-HE) - SE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE-WI-SE-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE-WI-SE-HE) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 108] Testing with its parent state 78 ... 
  [MINIMIZATION-STATE 108] -> Different from parent 78. Now check with sibling nodes ...
  [MINIMIZATION-STATE 108] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 108] -> **** Unique state 108 found ****
  [MINIMIZATION-STATE 108] -> finishing state
  [MINIMIZATION-STATE 109] Retrieving its SR dict
    => (HE-SE-WI-HE-DA-SE-WI-DA) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA-SE-WI-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-DA) - DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA-SE-WI-DA) - SE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA-SE-WI-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-DA) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 109] Testing with its parent state 78 ... 
  [MINIMIZATION-STATE 109] Same as parent state 78. Merge with its parent
  [MINIMIZATION-STATE 110] Retrieving its SR dict
    => (HE-SE-WI-HE-DA-SE-WI-SE) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE) - DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE) - SE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (10) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-SE) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 110] Testing with its parent state 78 ... 
  [MINIMIZATION-STATE 110] Same as parent state 78. Merge with its parent
  [MINIMIZATION-STATE 111] Retrieving its SR dict
    => (HE-SE-WI-HE-DA-SE-WI-HE) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-HE) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-HE) - DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-HE) - SE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-HE) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-HE) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 111] Testing with its parent state 78 ... 
  [MINIMIZATION-STATE 111] -> Different from parent 78. Now check with sibling nodes ...
  [MINIMIZATION-STATE 111] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 111] -> **** Unique state 111 found ****
  [MINIMIZATION-STATE 111] -> finishing state
  [MINIMIZATION-STATE 112] Retrieving its SR dict
    => (HE-SE-WI-HE-DA-SE-WI-HE-DA) - SE-WI / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-HE-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-HE-DA) - SE-WI-SE-HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-HE-DA) - DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-HE-DA) - SE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-HE-DA) - HE / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
    => (HE-SE-WI-HE-DA-SE-WI-HE-DA) - HE-DA / SE-WI-SE-HE-DA-SE-HE-DA-WI-SE-GO 
    => (0) sec
  [MINIMIZATION-STATE 112] Testing with its parent state 78 ... 
  [MINIMIZATION-STATE 112] -> Different from parent 78. Now check with sibling nodes ...
  [MINIMIZATION-STATE 112] -> Different from siblings, Now check with relative nodes ...
  [MINIMIZATION-STATE 112] -> **** Unique state 112 found ****
  [MINIMIZATION-STATE 112] -> finishing state
  [+] State minimization end in level 5. (Mon Apr  3 15:05:20 2023)
  [+] --- Finished level 6 | Time elapsed 2553.457591533661 ---
[+] All jobs done. Total elapsed time is  2553.458461523056
